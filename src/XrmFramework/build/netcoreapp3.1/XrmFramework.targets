<Project ToolsVersion="14.0"
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <_XrmFrameworkTaskDir Condition=" '$(_XrmFrameworkTaskDir)'=='' ">$(MSBuildThisFileDirectory)tasks</_XrmFrameworkTaskDir>
    <_XrmFrameworkLoggedServiceGenerator Condition=" '$(_XrmFrameworkTaskAssemblyFullPath)'=='' ">$(_XrmFrameworkTaskDir)\XrmFramework.MSBuild.Reflection.exe</_XrmFrameworkLoggedServiceGenerator>
  </PropertyGroup>

  <ItemGroup Condition="'$(XrmFrameworkDisableDependencyProjectGeneration)' == ''">
    <Compile Include="obj\XrmFrameworkServiceCollectionExtension.cs" />
  </ItemGroup>

  <Target Name="GenerateDependencyInjection" BeforeTargets="CoreCompile" Condition="'$(XrmFrameworkDisableDependencyProjectGeneration)' == '' AND '$(BuildingProject)' == 'true'">
    <Message Importance="High" Text="Building DependencyProject .Net Core 3.1" />

    <PropertyGroup>
      <ProjectFolderPath>$([System.IO.Directory]::GetParent($(MSBuildProjectFullPath)))</ProjectFolderPath>
    </PropertyGroup>

    <Delete Files="@(LoggedFiles)" ContinueOnError="true" />

    <ItemGroup>
      <FilesToCopy Include="$(MSBuildThisFileDirectory)\..\DependencyProject\**" />
    </ItemGroup>

    <Copy SourceFiles="@(FilesToCopy)" DestinationFiles="@(FilesToCopy->'$(ProjectFolderPath)\bin\DependencyProject\%(RecursiveDir)%(Filename)%(Extension)')" />

    <PropertyGroup>
      <ProjectFile>$(ProjectFolderPath)\bin\DependencyProject\DependencyProject.csproj</ProjectFile>
      <ProjectOutputFile>$(ProjectFolderPath)\bin\DependencyProject\bin\$(Configuration)\netcoreapp3.1\DependencyProject.dll</ProjectOutputFile>
    </PropertyGroup>
    <Message Importance="High" Text="=============> ProjectOutputFile=$(ProjectOutputFile)" />

    <MSBuild Projects="$(ProjectFile)" Targets="Restore;Build" Properties="Configuration=$(Configuration);SolutionDir=$(SolutionDir)" ContinueOnError="false" />

    <Exec Command="$(_XrmFrameworkLoggedServiceGenerator) &quot;$(ProjectOutputFile)&quot; &quot;$(ProjectFolderPath)\obj&quot; &quot;DependencyInjection&quot;" YieldDuringToolExecution="true" StandardErrorImportance="High" />

  </Target>

</Project>