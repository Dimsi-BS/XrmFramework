//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XrmFramework.DeployUtils.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XrmFramework.DeployUtils.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #region {0}
        ///		private List&lt;{1}&gt; {2} = new List&lt;{1}&gt;();
        ///		
        ///		public void Add{0}Responder({1} responder)
        ///		{{
        ///			{2}.Add(responder);
        ///		}}
        ///		
        ///		public {3}
        ///		{{
        ///			{4}
        ///			
        ///			if ({2}.Count &gt; 0)
        ///			{{
        ///				var responder = {2}.First();
        ///				{5}responder({6});
        ///				{2}.RemoveAt(0);
        ///				{7}
        ///			}}
        ///			else
        ///			{{
        ///				throw new NotImplementedException(&quot;Unexpected call to the method {0}&quot;);
        ///			}}
        ///		}}
        ///		#endregion.
        /// </summary>
        internal static string LoggedMethod {
            get {
                return ResourceManager.GetString("LoggedMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Model;
        ///using System;
        ///using System.Xml;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///using Microsoft.Xrm.Sdk.Query;
        ///using Microsoft.Crm.Sdk.Messages;
        ///using Microsoft.Xrm.Sdk;
        ///using Microsoft.Xrm.Sdk.Messages;
        ///
        ///namespace Plugins.Tests.Mocks.Services
        ///{{
        ///    public class {0} : {1}{2}
        ///    {{
        ///{3}
        ///    }}
        ///}}.
        /// </summary>
        internal static string MockFileShell {
            get {
                return ResourceManager.GetString("MockFileShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #region {0}
        ///		private List&lt;{1}&gt; {2} = new List&lt;{1}&gt;();
        ///		
        ///		public void Add{0}Responder({1} responder)
        ///		{{
        ///			{2}.Add(responder);
        ///		}}
        ///		
        ///		public {3}
        ///		{{
        ///			{4}
        ///			
        ///			if ({2}.Count &gt; 0)
        ///			{{
        ///				var responder = {2}.First();
        ///				{5}responder({6});
        ///				{2}.RemoveAt(0);
        ///				{7}
        ///			}}
        ///			else
        ///			{{
        ///				throw new NotImplementedException(&quot;Unexpected call to the method {0}&quot;);
        ///			}}
        ///		}}
        ///		#endregion
        ///.
        /// </summary>
        internal static string MockMethod {
            get {
                return ResourceManager.GetString("MockMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to             {0} = new {0}({1});.
        /// </summary>
        internal static string TestConstructorContent {
            get {
                return ResourceManager.GetString("TestConstructorContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using Model;
        ///using System;
        ///using System.Xml;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///using Microsoft.Xrm.Sdk;
        ///using Microsoft.Xrm.Sdk.Query;
        ///using Microsoft.Crm.Sdk.Messages;
        ///using Microsoft.VisualStudio.TestTools.UnitTesting;
        ///using Plugins.Tests.Mocks.Services;
        ///using Microsoft.Xrm.Sdk.Messages;
        ///
        ///namespace Plugins.Tests.Mocks
        ///{{
        ///    [TestClass]
        ///    public class {0}Tests : TestClass
        ///    {{
        ///        private {0} {0};
        ///
        ///        pro [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TestFileShell {
            get {
                return ResourceManager.GetString("TestFileShell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         [TestMethod]
        ///        public void {1}{2}Ok()
        ///        {{
        ///{3}
        ///            {0}.Add{1}Responder(new {7}(({8}) =&gt;
        ///                {{
        ///                    {6}
        ///            }}));
        ///
        ///            {0}.{1}{4}({5});
        ///        }}
        ///        #endregion
        ///
        ///.
        /// </summary>
        internal static string TestKoMethod {
            get {
                return ResourceManager.GetString("TestKoMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         #region {1}
        ///        [TestMethod]
        ///        public void {1}{2}Ko()
        ///        {{
        ///            var isException = false;
        ///{3}
        ///            try
        ///            {{
        ///                {0}.{1}{4}({5});
        ///            }}
        ///            catch (NotImplementedException e)
        ///            {{
        ///                Assert.IsTrue(e.Message.Contains(&quot;{1}&quot;));
        ///                isException = true;
        ///            }}
        ///            finally
        ///            {{
        ///                Assert.IsTrue(isException);
        ///            }}
        ///        }}
        ///
        ///.
        /// </summary>
        internal static string TestOkMethod {
            get {
                return ResourceManager.GetString("TestOkMethod", resourceCulture);
            }
        }
    }
}
