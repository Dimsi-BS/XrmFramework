<Project ToolsVersion="14.0"
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <ItemGroup Condition="'$(XrmFrameworkDisableLoggedServiceGeneration)' == ''">
    <LoggedFiles Include="**\Logged*.cs" />
    <LoggedFiles Include="obj\InternalDependencyProvider.cs" Condition="Exists('obj\InternalDependencyProvider.cs')" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="@(LoggedFiles)" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Here you need to experiment with [Build/Compile/SomeOther]DependsOn property -->
    <CoreCompileDependsOn>
      GenerateLoggedServices;
      $(CoreCompileDependsOn)
    </CoreCompileDependsOn>
  </PropertyGroup>

  <Target Name="RestoreServiceProject" Condition="'$(XrmFrameworkDisableLoggedServiceGeneration)' == '' AND '$(BuildingProject)' == 'true'">
    <Message Importance="High" Text="Preparing ServicesProject .Net Framework 4.6.2" />

    <PropertyGroup>
      <ProjectFolderPath>$([System.IO.Directory]::GetParent($(MSBuildProjectFullPath)))</ProjectFolderPath>
      <ProjectFile>$([MSBuild]::Escape($(ProjectFolderPath)\bin\ServicesProject\ServicesProject.csproj))</ProjectFile>
    </PropertyGroup>

    <ItemGroup>
      <FilesToCopy Include="$([MSBuild]::Escape($(MSBuildThisFileDirectory)))..\ServicesProject\**" />
    </ItemGroup>

    <Copy SourceFiles="@(FilesToCopy)" DestinationFiles="@(FilesToCopy->'$([MSBuild]::Escape($(ProjectFolderPath)))\bin\ServicesProject\%(RecursiveDir)%(Filename)%(Extension)')" />

    <MSBuild Projects="$(ProjectFile)" Targets="Restore" Properties="Configuration=$(Configuration);SolutionDir=$(SolutionDir);FakeProperty=restore" ContinueOnError="false" />
    <Message Importance="High" Text=">>>>>> Project ServicesProject Restored" />

  </Target>

  <Target Name="GenerateLoggedServices" DependsOnTargets="RestoreServiceProject" Condition="'$(XrmFrameworkDisableLoggedServiceGeneration)' == '' AND '$(BuildingProject)' == 'true'">
    <Message Importance="High" Text="Building ServicesProject .Net Framework 4.6.2" />

    <PropertyGroup>
      <_XrmFrameworkTaskDir Condition=" '$(_XrmFrameworkTaskDir)'=='' ">$([MSBuild]::Escape($(MSBuildThisFileDirectory)))tasks</_XrmFrameworkTaskDir>
      <_XrmFrameworkLoggedServiceGenerator Condition=" '$(_XrmFrameworkTaskAssemblyFullPath)'=='' ">XrmFramework.MSBuild.Reflection.exe</_XrmFrameworkLoggedServiceGenerator>
    </PropertyGroup>

    <PropertyGroup>
      <ProjectFolderPath>$([System.IO.Directory]::GetParent($(MSBuildProjectFullPath)))</ProjectFolderPath>
    </PropertyGroup>

    <Delete Files="@(LoggedFiles)" ContinueOnError="true" />

    <PropertyGroup>
      <ProjectFile>$([MSBuild]::Escape($(ProjectFolderPath)))\bin\ServicesProject\ServicesProject.csproj</ProjectFile>
      <ProjectOutputFile>$([MSBuild]::Escape($(ProjectFolderPath)))\bin\ServicesProject\bin\$(Configuration)\net462\ServicesProject.dll</ProjectOutputFile>
    </PropertyGroup>

    <MSBuild
     Projects="$(ProjectFile)"
     Targets="Clean;Build"
     Properties="Configuration=$(Configuration);SolutionDir=$(SolutionDir);FakeProperty=one"
     ContinueOnError="true" />

    <Exec Command="$(_XrmFrameworkLoggedServiceGenerator) &quot;$(ProjectOutputFile)&quot; &quot;$([MSBuild]::Escape($(ProjectFolderPath)))\obj&quot; &quot;LoggedServices&quot;" 
          WorkingDirectory="$([MSBuild]::Escape($(_XrmFrameworkTaskDir)))"
          YieldDuringToolExecution="true" 
          StandardErrorImportance="High" />

  </Target>

</Project>